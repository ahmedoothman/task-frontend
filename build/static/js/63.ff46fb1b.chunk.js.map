{"version":3,"file":"static/js/63.ff46fb1b.chunk.js","mappings":"0IACA,SAAgB,iBAAiB,qCAAqC,mBAAmB,uCAAuC,kBAAkB,sCAAsC,eAAe,mCAAmC,mBAAmB,uCAAuC,qBAAqB,yCAAyC,oBAAoB,wCAAwC,iBAAiB,sC,aCkB/a,MAAMA,EAA4CC,IAI3C,IAJ4C,MACjDC,EAAK,MACLC,EAAK,YACLC,GACDH,EACC,MAAOI,EAAeC,IAAoBC,EAAAA,EAAAA,UACxCJ,GAAgB,mBAGlBK,EAAAA,EAAAA,YAAU,QAAU,IAKpB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAS,GAAAC,OAAKC,EAAOP,IAAkBQ,QAJ1BC,KACrBV,GAAa,EAG0DW,SACpEb,GACM,C,yCCnCb,QAA8B,6B,2CCO9B,MAAMc,EAAoBA,KACxB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAOC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,UAAUH,OAEnDI,EAAwBA,KAE1BR,EADW,OAATI,EACOK,EAAAA,EAAYC,QAAQ,MAEpBD,EAAAA,EAAYC,QAAQ,MAC/B,EAEF,OACEC,EAAAA,EAAAA,MAAA,OAAKlB,UAAWE,EAAsBG,SAAA,EACpCN,EAAAA,EAAAA,KAAA,KAAAM,SAAII,EAAE,cACI,OAATE,GACCZ,EAAAA,EAAAA,KAAA,UAAQI,QAASY,EAAsBV,SAAC,QAGxCN,EAAAA,EAAAA,KAAA,UAAQI,QAASY,EAAsBV,SAAC,SAEtC,C,qEC5BV,QAA4B,4BAA5B,EAAsE,8B,mDCWtE,MA2BA,EA3B2Bc,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,EAAEZ,IAAMC,EAAAA,EAAAA,MASd,OACEQ,EAAAA,EAAAA,MAAA,OAAKlB,UAAWE,EAAoBG,SAAA,EAClCN,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAsBG,UACpCN,EAAAA,EAAAA,KAACO,EAAAA,EAAO,OAEVP,EAAAA,EAAAA,KAAA,MAAAM,SAAKI,EAAE,qBACPV,EAAAA,EAAAA,KAAA,KAAAM,SAAII,EAAE,qBACNV,EAAAA,EAAAA,KAACT,EAAAA,EAAY,CACXE,MAAOiB,EAAE,SACThB,MAAM,mBACNC,YAhBe4B,KAGnBC,EAAAA,EAAQC,IAAI,WAAY,OAAQ,CAAEC,QAAS,IAC3CL,EAAS,2BAA2B,MAc9B,C","sources":["webpack://task-frontend/./src/components/UI/button/customButton.module.scss?6cbb","components/UI/button/CustomButtonA.tsx","webpack://task-frontend/./src/components/UI/langBox/langBox.module.scss?a83a","components/UI/langBox/LangBox.tsx","webpack://task-frontend/./src/pages/home/homePage.module.scss?c7b8","pages/home/HomePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"primary-filled\":\"customButton_primary-filled__H9xWl\",\"secondary-filled\":\"customButton_secondary-filled__srkH2\",\"tertiary-filled\":\"customButton_tertiary-filled__IO4Im\",\"white-filled\":\"customButton_white-filled__MseOx\",\"primary-outlined\":\"customButton_primary-outlined__0tlro\",\"secondary-outlined\":\"customButton_secondary-outlined__8HNgK\",\"tertiary-outlined\":\"customButton_tertiary-outlined__j3Y7a\",\"white-outlined\":\"customButton_white-outlined__0M+f0\"};","import React, { useEffect, useState } from 'react';\r\n// styles\r\nimport styles from './customButton.module.scss';\r\n\r\ntype ClassList =\r\n  | 'primary-filled'\r\n  | 'secondary-filled'\r\n  | 'tertiary-filled'\r\n  | 'white-filled'\r\n  | 'primary-outlined'\r\n  | 'secondary-outlined'\r\n  | 'tertiary-outlined'\r\n  | 'white-outlined';\r\n\r\ninterface CustomButtonProps {\r\n  title: string;\r\n  style: ClassList;\r\n  onClickFunc: (param?: any) => void;\r\n}\r\nconst CustomButton: React.FC<CustomButtonProps> = ({\r\n  title,\r\n  style,\r\n  onClickFunc,\r\n}) => {\r\n  const [classSelected, setClassSelected] = useState<ClassList>(\r\n    style ? style : 'primary-filled'\r\n  );\r\n  // useEffect\r\n  useEffect(() => {}, []);\r\n  // onClickHandler\r\n  const onClickHandler = () => {\r\n    onClickFunc();\r\n  };\r\n  return (\r\n    <button className={`${styles[classSelected]}`} onClick={onClickHandler}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { CustomButton };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"change-lang\":\"langBox_change-lang__W2jFz\"};","import React, { useState } from 'react';\r\n// styles\r\nimport styles from './langBox.module.scss';\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { mainActions } from '../../../store/main-slice';\r\n// i18n\r\nimport { useTranslation } from 'react-i18next';\r\nconst LangBox: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const lang = useSelector((state: any) => state.mainSlice.lang);\r\n\r\n  const changeLanguageHandler = () => {\r\n    if (lang === 'en') {\r\n      dispatch(mainActions.setLang('fr'));\r\n    } else {\r\n      dispatch(mainActions.setLang('en'));\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles['change-lang']}>\r\n      <p>{t('language')}</p>\r\n      {lang === 'en' ? ( // if english\r\n        <button onClick={changeLanguageHandler}>fr</button>\r\n      ) : (\r\n        // if french\r\n        <button onClick={changeLanguageHandler}>en</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LangBox };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"homePage_container__WXzh8\",\"change-lang\":\"homePage_change-lang__KZlUl\"};","import React from 'react';\r\n// router\r\nimport { useNavigate } from 'react-router-dom';\r\n// styles\r\nimport styles from './homePage.module.scss';\r\n// i18n\r\nimport { useTranslation } from 'react-i18next';\r\n// js-cookie\r\nimport Cookies from 'js-cookie';\r\n//Components\r\nimport { CustomButton } from '../../components/UI/button/CustomButtonA';\r\nimport { LangBox } from '../../components/UI/langBox/LangBox';\r\nconst HomePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  //   login function\r\n  const loginHandler = () => {\r\n    // implement login logic\r\n    // but for now, just set loggedIn cookie to true for 1 day\r\n    Cookies.set('loggedIn', 'true', { expires: 1 });\r\n    navigate('/dashboard/dashboardPage');\r\n  };\r\n  return (\r\n    <div className={styles['container']}>\r\n      <div className={styles['change-lang']}>\r\n        <LangBox />\r\n      </div>\r\n      <h1>{t('welcomeMessage')}</h1>\r\n      <p>{t('appDescription')}</p>\r\n      <CustomButton\r\n        title={t('login')}\r\n        style='secondary-filled'\r\n        onClickFunc={loginHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["CustomButton","_ref","title","style","onClickFunc","classSelected","setClassSelected","useState","useEffect","_jsx","className","concat","styles","onClick","onClickHandler","children","LangBox","dispatch","useDispatch","t","useTranslation","lang","useSelector","state","mainSlice","changeLanguageHandler","mainActions","setLang","_jsxs","HomePage","navigate","useNavigate","loginHandler","Cookies","set","expires"],"sourceRoot":""}